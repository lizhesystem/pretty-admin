<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.pretty.module.system.mapper.SysApiMapper">
  <resultMap id="BaseResultMap" type="com.lz.pretty.module.system.model.SysApi">
    <!--@mbg.generated-->
    <!--@Table sys_api-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="api_pid" jdbcType="BIGINT" property="apiPid" />
    <result column="api_pids" jdbcType="VARCHAR" property="apiPids" />
    <result column="is_leaf" jdbcType="BOOLEAN" property="isLeaf" />
    <result column="api_name" jdbcType="VARCHAR" property="apiName" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="api_sort" jdbcType="INTEGER" property="apiSort" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="status" jdbcType="BOOLEAN" property="status" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, api_pid, api_pids, is_leaf, api_name, url, api_sort, `level`, `status`, create_by, 
    create_time, update_by, update_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sys_api
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="api_pid = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.apiPid,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="api_pids = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.apiPids,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="is_leaf = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.isLeaf,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="api_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.apiName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="url = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.url,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="api_sort = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.apiSort,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`level` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.level,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sys_api
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="api_pid = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.apiPid != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.apiPid,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="api_pids = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.apiPids != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.apiPids,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="is_leaf = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.isLeaf != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.isLeaf,jdbcType=BOOLEAN}
          </if>
        </foreach>
      </trim>
      <trim prefix="api_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.apiName != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.apiName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="url = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.url != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.url,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="api_sort = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.apiSort != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.apiSort,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="`level` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.level != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.level,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.status != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=BOOLEAN}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createBy != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createBy,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateBy != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateBy,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into sys_api
    (id, api_pid, api_pids, is_leaf, api_name, url, api_sort, `level`, `status`, create_by, 
      create_time, update_by, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.apiPid,jdbcType=BIGINT}, #{item.apiPids,jdbcType=VARCHAR}, 
        #{item.isLeaf,jdbcType=BOOLEAN}, #{item.apiName,jdbcType=VARCHAR}, #{item.url,jdbcType=VARCHAR}, 
        #{item.apiSort,jdbcType=INTEGER}, #{item.level,jdbcType=INTEGER}, #{item.status,jdbcType=BOOLEAN}, 
        #{item.createBy,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=VARCHAR}, 
        #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.lz.pretty.module.system.model.SysApi">
    <!--@mbg.generated-->
    insert into sys_api
    (id, api_pid, api_pids, is_leaf, api_name, url, api_sort, `level`, `status`, create_by, 
      create_time, update_by, update_time)
    values
    (#{id,jdbcType=BIGINT}, #{apiPid,jdbcType=BIGINT}, #{apiPids,jdbcType=VARCHAR}, #{isLeaf,jdbcType=BOOLEAN}, 
      #{apiName,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{apiSort,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER}, #{status,jdbcType=BOOLEAN}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    api_pid = #{apiPid,jdbcType=BIGINT}, 
    api_pids = #{apiPids,jdbcType=VARCHAR}, 
    is_leaf = #{isLeaf,jdbcType=BOOLEAN}, 
    api_name = #{apiName,jdbcType=VARCHAR}, 
    url = #{url,jdbcType=VARCHAR}, 
    api_sort = #{apiSort,jdbcType=INTEGER}, 
    `level` = #{level,jdbcType=INTEGER}, 
    `status` = #{status,jdbcType=BOOLEAN}, 
    create_by = #{createBy,jdbcType=VARCHAR}, 
    create_time = #{createTime,jdbcType=TIMESTAMP}, 
    update_by = #{updateBy,jdbcType=VARCHAR}, 
    update_time = #{updateTime,jdbcType=TIMESTAMP}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.lz.pretty.module.system.model.SysApi">
    <!--@mbg.generated-->
    insert into sys_api
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="apiPid != null">
        api_pid,
      </if>
      <if test="apiPids != null">
        api_pids,
      </if>
      <if test="isLeaf != null">
        is_leaf,
      </if>
      <if test="apiName != null">
        api_name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="apiSort != null">
        api_sort,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="apiPid != null">
        #{apiPid,jdbcType=BIGINT},
      </if>
      <if test="apiPids != null">
        #{apiPids,jdbcType=VARCHAR},
      </if>
      <if test="isLeaf != null">
        #{isLeaf,jdbcType=BOOLEAN},
      </if>
      <if test="apiName != null">
        #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="apiSort != null">
        #{apiSort,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BOOLEAN},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="apiPid != null">
        api_pid = #{apiPid,jdbcType=BIGINT},
      </if>
      <if test="apiPids != null">
        api_pids = #{apiPids,jdbcType=VARCHAR},
      </if>
      <if test="isLeaf != null">
        is_leaf = #{isLeaf,jdbcType=BOOLEAN},
      </if>
      <if test="apiName != null">
        api_name = #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="apiSort != null">
        api_sort = #{apiSort,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BOOLEAN},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>