<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.pretty.module.system.mapper.SysDictMapper">
  <resultMap id="BaseResultMap" type="com.lz.pretty.module.system.model.SysDict">
    <!--@mbg.generated-->
    <!--@Table sys_dict-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="group_code" jdbcType="VARCHAR" property="groupCode" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_value" jdbcType="VARCHAR" property="itemValue" />
    <result column="item_desc" jdbcType="VARCHAR" property="itemDesc" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, group_name, group_code, item_name, item_value, item_desc, create_by, create_time, 
    update_by, update_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sys_dict
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="group_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.groupName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="group_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.groupCode,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="item_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.itemName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="item_value = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.itemValue,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="item_desc = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.itemDesc,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sys_dict
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="group_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.groupName != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.groupName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="group_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.groupCode != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.groupCode,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="item_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.itemName != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.itemName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="item_value = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.itemValue != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.itemValue,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="item_desc = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.itemDesc != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.itemDesc,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createBy != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createBy,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateBy != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateBy,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into sys_dict
    (id, group_name, group_code, item_name, item_value, item_desc, create_by, create_time, 
      update_by, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.groupName,jdbcType=VARCHAR}, #{item.groupCode,jdbcType=VARCHAR}, 
        #{item.itemName,jdbcType=VARCHAR}, #{item.itemValue,jdbcType=VARCHAR}, #{item.itemDesc,jdbcType=VARCHAR}, 
        #{item.createBy,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=VARCHAR}, 
        #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.lz.pretty.module.system.model.SysDict">
    <!--@mbg.generated-->
    insert into sys_dict
    (id, group_name, group_code, item_name, item_value, item_desc, create_by, create_time, 
      update_by, update_time)
    values
    (#{id,jdbcType=BIGINT}, #{groupName,jdbcType=VARCHAR}, #{groupCode,jdbcType=VARCHAR}, 
      #{itemName,jdbcType=VARCHAR}, #{itemValue,jdbcType=VARCHAR}, #{itemDesc,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    group_name = #{groupName,jdbcType=VARCHAR}, 
    group_code = #{groupCode,jdbcType=VARCHAR}, 
    item_name = #{itemName,jdbcType=VARCHAR}, 
    item_value = #{itemValue,jdbcType=VARCHAR}, 
    item_desc = #{itemDesc,jdbcType=VARCHAR}, 
    create_by = #{createBy,jdbcType=VARCHAR}, 
    create_time = #{createTime,jdbcType=TIMESTAMP}, 
    update_by = #{updateBy,jdbcType=VARCHAR}, 
    update_time = #{updateTime,jdbcType=TIMESTAMP}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.lz.pretty.module.system.model.SysDict">
    <!--@mbg.generated-->
    insert into sys_dict
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="groupCode != null">
        group_code,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="itemValue != null">
        item_value,
      </if>
      <if test="itemDesc != null">
        item_desc,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="groupCode != null">
        #{groupCode,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemValue != null">
        #{itemValue,jdbcType=VARCHAR},
      </if>
      <if test="itemDesc != null">
        #{itemDesc,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="groupCode != null">
        group_code = #{groupCode,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemValue != null">
        item_value = #{itemValue,jdbcType=VARCHAR},
      </if>
      <if test="itemDesc != null">
        item_desc = #{itemDesc,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>