<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.pretty.module.system.mapper.SysOrgMapper">
  <resultMap id="BaseResultMap" type="com.lz.pretty.module.system.model.SysOrg">
    <!--@mbg.generated-->
    <!--@Table sys_org-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="org_pid" jdbcType="BIGINT" property="orgPid" />
    <result column="org_pids" jdbcType="VARCHAR" property="orgPids" />
    <result column="org_name" jdbcType="VARCHAR" property="orgName" />
    <result column="org_sort" jdbcType="INTEGER" property="orgSort" />
    <result column="is_leaf" jdbcType="BOOLEAN" property="isLeaf" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="status" jdbcType="BOOLEAN" property="status" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, org_pid, org_pids, org_name, org_sort, is_leaf, address, phone, email, `level`, 
    `status`, create_by, create_time, update_by, update_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sys_org
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="org_pid = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.orgPid,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="org_pids = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.orgPids,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="org_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.orgName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="org_sort = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.orgSort,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="is_leaf = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.isLeaf,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="address = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.address,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="phone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.phone,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="email = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.email,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`level` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.level,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sys_org
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="org_pid = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.orgPid != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.orgPid,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="org_pids = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.orgPids != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.orgPids,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="org_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.orgName != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.orgName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="org_sort = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.orgSort != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.orgSort,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="is_leaf = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.isLeaf != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.isLeaf,jdbcType=BOOLEAN}
          </if>
        </foreach>
      </trim>
      <trim prefix="address = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.address != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.address,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="phone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.phone != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.phone,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="email = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.email != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.email,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="`level` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.level != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.level,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.status != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=BOOLEAN}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createBy != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createBy,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateBy != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateBy,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into sys_org
    (id, org_pid, org_pids, org_name, org_sort, is_leaf, address, phone, email, `level`, 
      `status`, create_by, create_time, update_by, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.orgPid,jdbcType=BIGINT}, #{item.orgPids,jdbcType=VARCHAR}, 
        #{item.orgName,jdbcType=VARCHAR}, #{item.orgSort,jdbcType=INTEGER}, #{item.isLeaf,jdbcType=BOOLEAN}, 
        #{item.address,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, 
        #{item.level,jdbcType=INTEGER}, #{item.status,jdbcType=BOOLEAN}, #{item.createBy,jdbcType=VARCHAR}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.lz.pretty.module.system.model.SysOrg">
    <!--@mbg.generated-->
    insert into sys_org
    (id, org_pid, org_pids, org_name, org_sort, is_leaf, address, phone, email, `level`, 
      `status`, create_by, create_time, update_by, update_time)
    values
    (#{id,jdbcType=BIGINT}, #{orgPid,jdbcType=BIGINT}, #{orgPids,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, 
      #{orgSort,jdbcType=INTEGER}, #{isLeaf,jdbcType=BOOLEAN}, #{address,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{status,jdbcType=BOOLEAN}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    org_pid = #{orgPid,jdbcType=BIGINT}, 
    org_pids = #{orgPids,jdbcType=VARCHAR}, 
    org_name = #{orgName,jdbcType=VARCHAR}, 
    org_sort = #{orgSort,jdbcType=INTEGER}, 
    is_leaf = #{isLeaf,jdbcType=BOOLEAN}, 
    address = #{address,jdbcType=VARCHAR}, 
    phone = #{phone,jdbcType=VARCHAR}, 
    email = #{email,jdbcType=VARCHAR}, 
    `level` = #{level,jdbcType=INTEGER}, 
    `status` = #{status,jdbcType=BOOLEAN}, 
    create_by = #{createBy,jdbcType=VARCHAR}, 
    create_time = #{createTime,jdbcType=TIMESTAMP}, 
    update_by = #{updateBy,jdbcType=VARCHAR}, 
    update_time = #{updateTime,jdbcType=TIMESTAMP}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.lz.pretty.module.system.model.SysOrg">
    <!--@mbg.generated-->
    insert into sys_org
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orgPid != null">
        org_pid,
      </if>
      <if test="orgPids != null">
        org_pids,
      </if>
      <if test="orgName != null">
        org_name,
      </if>
      <if test="orgSort != null">
        org_sort,
      </if>
      <if test="isLeaf != null">
        is_leaf,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orgPid != null">
        #{orgPid,jdbcType=BIGINT},
      </if>
      <if test="orgPids != null">
        #{orgPids,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="orgSort != null">
        #{orgSort,jdbcType=INTEGER},
      </if>
      <if test="isLeaf != null">
        #{isLeaf,jdbcType=BOOLEAN},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BOOLEAN},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="orgPid != null">
        org_pid = #{orgPid,jdbcType=BIGINT},
      </if>
      <if test="orgPids != null">
        org_pids = #{orgPids,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        org_name = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="orgSort != null">
        org_sort = #{orgSort,jdbcType=INTEGER},
      </if>
      <if test="isLeaf != null">
        is_leaf = #{isLeaf,jdbcType=BOOLEAN},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BOOLEAN},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>